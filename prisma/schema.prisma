// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @unique
    slug String? @db.VarChar(200)
    first_name String @db.VarChar(200)
    middle_name String? @db.VarChar(200)
    last_name String @db.VarChar(200)
    phone_number String @unique
    location String? @db.VarChar(200)
    summary String? @db.Text
    github String? @db.VarChar(500)
    linkedin String? @db.VarChar(500)
    twitter String? @db.VarChar(500)
    resume_url String? @db.VarChar(500)
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    profile_picture Picture?
    skills Skill[]
    services Service[]
    posts Post[]
    educations Education[]
    employments Employment[]

    authentication Authentication @relation(fields: [id], references: [id])
}

model Authentication {
    id String @id @default(uuid()) @unique
    email String @unique
    password String
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user User?
}

model Post {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    title String @db.VarChar(200)
    description String
    github String? @db.VarChar(200)
    url String?
    is_active Boolean
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt
    pictures Picture[]
    skills Skill[]

    user_id String @unique
    user User @relation(fields: [user_id], references: [id])
}

model Picture {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    picture_name String @db.VarChar(200)
    picture_url String @db.VarChar(500)
    is_active Boolean
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user_id String? @unique
    user User? @relation(fields: [user_id], references: [id])

    post_id String? @unique
    post Post? @relation(fields: [post_id], references: [id])
}

model Skill {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    name String @db.VarChar(200)
    description String @db.VarChar(200)
    is_active Boolean
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user_id String @unique
    user User @relation(fields: [user_id], references: [id])

    post_id String? @unique
    post Post? @relation(fields: [post_id], references: [id])
}

model Service {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    name String @db.VarChar(200)
    description String @db.VarChar(200)
    is_active Boolean
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user_id String @unique
    user User @relation(fields: [user_id], references: [id])
}

model Education {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    institution String @db.VarChar(200)
    field String? @db.VarChar(200)
    degree String? @db.VarChar(200)
    location String? @db.VarChar(200)
    description String @db.VarChar(1000)
    url String?
    start_date DateTime
    end_date DateTime
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user_id String @unique
    user User @relation(fields: [user_id], references: [id])
}

model Employment {
    id String @id @default(uuid()) @unique
    slug String? @db.VarChar(200)
    company String @db.VarChar(200)
    job_title String @db.VarChar(200)
    location String? @db.VarChar(200)
    description String @db.VarChar(500)
    start_date DateTime
    end_date DateTime
    created_date DateTime @default(now())
    modified_date DateTime? @updatedAt

    user_id String @unique
    user User @relation(fields: [user_id], references: [id])
}

